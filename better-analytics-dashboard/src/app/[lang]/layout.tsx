import { ReactNode } from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import { getDictionary, SupportedLanguages } from "./dictionaries";

import Providers from "@/app/[lang]/Providers";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type RootLayoutParams = {
  children: ReactNode,
  params: Promise<{lang: SupportedLanguages}>
}

export default async function RootLayout({
  children,
  params
}: RootLayoutParams) {
  const { lang } = await params;
  const dict = await getDictionary(lang);

  return (
    <html lang={lang} suppressHydrationWarning>
      <head>
        <Script src="http://localhost:3001/analytics.js" data-site-id="default-site"></Script>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers dictionary={dict}>
          {children}
        </Providers>
      </body>
    </html>
  );
}
